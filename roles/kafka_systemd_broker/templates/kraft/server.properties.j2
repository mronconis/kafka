# {{ ansible_managed }}

node.id={{ kafka_node_id }}

process.roles={{ kafka_kraft_roles | join(',') }}

listener.security.protocol.map={{ __kafka_config.core['listener.security.protocol.map'] }}
listeners={{ __kafka_config.core['listeners'] }}
advertised.listeners={{ __kafka_config.core['advertised.listeners'] }}

inter.broker.listener.name={{ kafka_inter_broker_listener_name }}
controller.listener.names={{ kafka_controller_listener_name }}

controller.quorum.bootstrap.servers={{ controller_quorum_bootstrap_servers| join(',') }}

log.dirs={{ kafka_log_dirs | join(',') }}

{% for l_name, l_config in __kafka_config.listeners.items() %}

{% if l_config.tls %}
# ---- {{ l_name }} -----
listener.name.{{ l_name | lower }}.ssl.truststore.location={{ l_config.truststore_location }}
listener.name.{{ l_name | lower }}.ssl.truststore.type={{ l_config.truststore_type }}
listener.name.{{ l_name | lower }}.ssl.keystore.location={{ l_config.keystore_location }}
listener.name.{{ l_name | lower }}.ssl.keystore.password={{ l_config.keystore_password }}
listener.name.{{ l_name | lower }}.ssl.keystore.type={{ l_config.keystore_type }}
{% if 'ssl_client_auth' in l_config %}
listener.name.{{ l_name | lower }}.ssl.client.auth={{ l_config.ssl_client_auth }}
{% endif %}
{% endif %}

{% if 'sasl' in l_config %}
listener.name.{{ l_name | lower }}.sasl.enabled.mechanisms={{ l_config.sasl.keys() | map('upper') | join(',') }}
{% if 'gssapi' in l_config.authentication.type %}
listener.name.{{ l_name | lower }}.sasl.kerberos.service.name=kafka
{% endif %}
{% for sasl_mechanism, sasl_config in l_config.sasl.items() %}
listener.name.{{ l_name | lower }}.{{ sasl_mechanism }}.sasl.jaas.config={{ sasl_config | replace('\\n', '\n') }}
{% endfor %}
{% if l_name in kafka_inter_broker_listener_name %}
sasl.mechanism.inter.broker.protocol={{ l_config.authentication.type | upper }}
{% endif %}
{% endif %}

{% endfor %}

{% if __kafka_config.authorization %}
allow.everyone.if.no.acl.found = {{ __kafka_config.authorization['allow.everyone.if.no.acl.found'] }}
authorizer.class.name = org.apache.kafka.metadata.authorizer.StandardAuthorizer
super.users = {{ __kafka_config.authorization['super.users'] | join(';') }}
{% endif %}

{% for kafka_conf_key, kafka_conf_value in __kafka_config.additional_config.items() %}
{{ kafka_conf_key }}={{ kafka_conf_value }}
{% endfor %}

